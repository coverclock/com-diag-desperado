OBJECTS= dictionary.o system.o fileaccess.o float.o double.o prefix.o search.o softcore.o stack.o tools.o vm.o primitives.o bit.o lzuncompress.o utility.o hash.o callback.o word.o extras.o ficldesperado.o
HEADERS= ficl.h ficllocal.h
#
# Flags for shared library
SHFLAGS = -Ddesperado -fPIC
CFLAGS	= -O -c $(SHFLAGS)
CC		= $(CROSS_COMPILE)gcc
LIB		= $(CROSS_COMPILE)ar cr
RANLIB	= $(CROSS_COMPILE)ranlib

MAJOR = 4
MINOR = 0
BUILD = 31

ficl: main.o $(HEADERS) libficl.a
	$(CC) main.o -o ficl -L. -lficl -lm

lib: libficl.so.$(MAJOR).$(MINOR).$(BUILD)

# static library build
libficl.a: $(OBJECTS)
	$(LIB) libficl.a $(OBJECTS)
	$(RANLIB) libficl.a

# shared library build
libficl.so:	libficl.so.$(MAJOR).$(MINOR).$(BUILD)
	ln -sf libficl.so.$(MAJOR).$(MINOR).$(BUILD) libficl.so

libficl.so.$(MAJOR).$(MINOR).$(BUILD): $(OBJECTS)
	$(CC) -shared -Wl,-soname,libficl.so.$(MAJOR).$(MINOR).$(BUILD) \
	-o libficl.so.$(MAJOR).$(MINOR).$(BUILD) $(OBJECTS)

main: main.o ficl.h sysdep.h libficl.so.$(MAJOR).$(MINOR).$(BUILD)
	$(CC) main.o -o main -L. -lficl -lm
	ln -sf libficl.so.$(MAJOR).$(MINOR).$(BUILD) libficl.so.$(MAJOR)

#
#       generic object code
#
.SUFFIXES: .cxx .cc .c .o

.c.o:
	$(CC) $(CFLAGS) -c $*.c

.cxx.o:
	$(CPP) $(CPFLAGS) -c $*.cxx

.cc.o:
	$(CPP) $(CPFLAGS) -c $*.cc
#
#       generic cleanup code
#
clean:
	rm -f *.o *.a libficl.*
